// $ANTLR 2.7.7 (20060906): "asn1.g" -> "ASNParser.java"$

package com.beanit.asn1bean.compiler.parser;

import com.beanit.asn1bean.compiler.model.*;
import java.math.*;
import java.util.*;

public interface ASNTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int ABSENT_KW = 4;
	int ALL_KW = 5;
	int ANY_KW = 6;
	int APPLICATION_KW = 7;
	int AUTOMATIC_KW = 8;
	int BASED_NUM_KW = 9;
	int BEGIN_KW = 10;
	int BIT_KW = 11;
	int BMP_STR_KW = 12;
	int BOOLEAN_KW = 13;
	int BY_KW = 14;
	int CHARACTER_KW = 15;
	int CHOICE_KW = 16;
	int CLASS_KW = 17;
	int COMPONENTS_KW = 18;
	int COMPONENT_KW = 19;
	int CONSTRAINED_KW = 20;
	int CONTAINING_KW = 21;
	int DEFAULT_KW = 22;
	int DEFINED_KW = 23;
	int DEFINITIONS_KW = 24;
	int EMBEDDED_KW = 25;
	int END_KW = 26;
	int ENUMERATED_KW = 27;
	int EXCEPT_KW = 28;
	int EXPLICIT_KW = 29;
	int EXPORTS_KW = 30;
	int EXTENSIBILITY_KW = 31;
	int EXTERNAL_KW = 32;
	int FALSE_KW = 33;
	int FROM_KW = 34;
	int GENERALIZED_TIME_KW = 35;
	int GENERAL_STR_KW = 36;
	int GRAPHIC_STR_KW = 37;
	int IA5_STRING_KW = 38;
	int IA5_STRING_UPPER_KW = 39;
	int IDENTIFIER_KW = 40;
	int IMPLICIT_KW = 41;
	int IMPLIED_KW = 42;
	int IMPORTS_KW = 43;
	int INCLUDES_KW = 44;
	int INSTANCE_KW = 45;
	int INTEGER_KW = 46;
	int INTERSECTION_KW = 47;
	int ISO646_STR_KW = 48;
	int LINKED_KW = 49;
	int MAX_KW = 50;
	int MINUS_INFINITY_KW = 51;
	int MIN_KW = 52;
	int NULL_KW = 53;
	int NUMERIC_STR_KW = 54;
	int OBJECT_DESCRIPTOR_KW = 55;
	int OBJECT_KW = 56;
	int OCTET_KW = 57;
	int OF_KW = 58;
	int OID_KW = 59;
	int OPTIONAL_KW = 60;
	int PARAMETER_KW = 61;
	int PDV_KW = 62;
	int PLUS_INFINITY_KW = 63;
	int PRESENT_KW = 64;
	int PRINTABLE_STR_KW = 65;
	int PRIVATE_KW = 66;
	int REAL_KW = 67;
	int RELATIVE_KW = 68;
	int RESULT_KW = 69;
	int SEQUENCE_KW = 70;
	int SET_KW = 71;
	int SIZE_KW = 72;
	int STRING_KW = 73;
	int SYNTAX_KW = 74;
	int TAGS_KW = 75;
	int TELETEX_STR_KW = 76;
	int TRUE_KW = 77;
	int T61_STR_KW = 78;
	int UNION_KW = 79;
	int UNIQUE_KW = 80;
	int UNIVERSAL_KW = 81;
	int UNIVERSAL_STR_KW = 82;
	int UTC_TIME_KW = 83;
	int UTF8_STR_KW = 84;
	int VIDEOTEX_STR_KW = 85;
	int VISIBLE_STR_KW = 86;
	int WITH_KW = 87;
	int TIME_KW = 88;
	int DATE_KW = 89;
	int TIME_OF_DAY_KW = 90;
	int DATE_TIME_KW = 91;
	int DURATION_KW = 92;
	int ASSIGN_OP = 93;
	int BAR = 94;
	int COLON = 95;
	int COMMA = 96;
	int COMMENT = 97;
	int DOT = 98;
	int AMPERSAND = 99;
	int DOTDOT = 100;
	int ELLIPSIS = 101;
	int EXCLAMATION = 102;
	int INTERSECTION = 103;
	int LESS = 104;
	int L_BRACE = 105;
	int L_BRACKET = 106;
	int L_DBRACKET = 107;
	int L_PAREN = 108;
	int MINUS = 109;
	int PLUS = 110;
	int R_BRACE = 111;
	int R_BRACKET = 112;
	int R_DBRACKET = 113;
	int R_PAREN = 114;
	int SEMI = 115;
	int SINGLE_QUOTE = 116;
	int CHARB = 117;
	int CHARH = 118;
	int AT_SIGN = 119;
	int WS = 120;
	int SL_COMMENT = 121;
	int ML_COMMENT = 122;
	int DIGIT = 123;
	int NUMBER = 124;
	int NEG_NUMBER = 125;
	int EXPONENT = 126;
	int SCIENTIFIC_NUMBER = 127;
	int NUMBER_OR_SCIENTIFIC_NUMBER = 128;
	int UPPER = 129;
	int LOWER = 130;
	int BDIG = 131;
	int HDIG = 132;
	int B_OR_H_STRING = 133;
	int B_STRING = 134;
	int H_STRING = 135;
	int C_STRING = 136;
	int EXCEPT = 137;
	int INCLUDES = 138;
	int PATTERN_KW = 139;
}
